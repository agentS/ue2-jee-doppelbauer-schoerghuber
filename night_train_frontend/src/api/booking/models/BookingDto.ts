/* tslint:disable */
/* eslint-disable */
/**
 * Timetable API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TicketDto,
    TicketDtoFromJSON,
    TicketDtoFromJSONTyped,
    TicketDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface BookingDto
 */
export interface BookingDto {
    /**
     * 
     * @type {Date}
     * @memberof BookingDto
     */
    departureDate?: Date;
    /**
     * 
     * @type {number}
     * @memberof BookingDto
     */
    destinationId?: number;
    /**
     * 
     * @type {string}
     * @memberof BookingDto
     */
    destinationStationName?: string;
    /**
     * 
     * @type {number}
     * @memberof BookingDto
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof BookingDto
     */
    originId?: number;
    /**
     * 
     * @type {string}
     * @memberof BookingDto
     */
    originStationName?: string;
    /**
     * 
     * @type {Array<TicketDto>}
     * @memberof BookingDto
     */
    tickets?: Array<TicketDto>;
}

export function BookingDtoFromJSON(json: any): BookingDto {
    return BookingDtoFromJSONTyped(json, false);
}

export function BookingDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BookingDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'departureDate': !exists(json, 'departureDate') ? undefined : (new Date(json['departureDate'])),
        'destinationId': !exists(json, 'destinationId') ? undefined : json['destinationId'],
        'destinationStationName': !exists(json, 'destinationStationName') ? undefined : json['destinationStationName'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'originId': !exists(json, 'originId') ? undefined : json['originId'],
        'originStationName': !exists(json, 'originStationName') ? undefined : json['originStationName'],
        'tickets': !exists(json, 'tickets') ? undefined : ((json['tickets'] as Array<any>).map(TicketDtoFromJSON)),
    };
}

export function BookingDtoToJSON(value?: BookingDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'departureDate': value.departureDate === undefined ? undefined : (value.departureDate.toISOString().substr(0,10)),
        'destinationId': value.destinationId,
        'destinationStationName': value.destinationStationName,
        'id': value.id,
        'originId': value.originId,
        'originStationName': value.originStationName,
        'tickets': value.tickets === undefined ? undefined : ((value.tickets as Array<any>).map(TicketDtoToJSON)),
    };
}


